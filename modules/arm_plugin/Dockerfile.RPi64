FROM ubuntu:18.04
MAINTAINER vitaly.tuzov@intel.com

ENV https_proxy=http://proxy-chain.intel.com:912
ENV http_proxy=http://proxy-chain.intel.com:911
ENV socks_proxy=http://proxy-us.intel.com:1080
ENV ftp_proxy=http://proxy-chain.intel.com:911
ENV no_proxy=localhost,127.0.0.1

ENV DEBIAN_FRONTEND noninteractive
ENV PAKAGE_UPDATES_OF 20201019_11

RUN apt-get update && apt-get -y upgrade

#Prerequisit installation
RUN apt-get install -y wget git git-lfs scons cmake build-essential crossbuild-essential-arm64 python libprotoc-dev protobuf-compiler

#configure paths
RUN mkdir -p /armcpu_plugin/armcpu_debian64_rpi
WORKDIR /armcpu_plugin
ENV DEV_HOME /armcpu_plugin
ENV OPENCV_HOME=$DEV_HOME/opencv
ENV DLDT_HOME $DEV_HOME/openvino
ENV ARM_PLUGIN_HOME $DEV_HOME/armnn-plugin
ENV STAGING_DIR $DEV_HOME/armcpu_debian64_rpi

ADD .ssh /root/.ssh

ENV SOURCE_UPDATES_OF 20201019_11

#OpenCV
RUN git clone https://github.com/opencv/opencv.git $OPENCV_HOME && \
    mkdir $OPENCV_HOME/build && \
    cd $OPENCV_HOME/build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_LIST=imgcodecs,videoio,highgui \
             -DCMAKE_TOOLCHAIN_FILE=$OPENCV_HOME/platforms/linux/aarch64-gnu.toolchain.cmake \
             -DCMAKE_STAGING_PREFIX=$STAGING_DIR && \
    make -j32 && \
    make install && \
    cd $DEV_HOME

#OpenVINO
RUN git clone --recurse-submodules https://github.com/openvinotoolkit/openvino.git $DLDT_HOME && \
    mkdir $DLDT_HOME/build && \
    cd $DLDT_HOME/build && \
    cmake -DOpenCV_DIR=$STAGING_DIR/lib/cmake/opencv4 -DENABLE_OPENCV=OFF \
          -DENABLE_TESTS=ON -DENABLE_BEH_TESTS=ON -DENABLE_FUNCTIONAL_TESTS=ON \
          -DENABLE_SSE42=OFF -DENABLE_MYRIAD=OFF -DENABLE_GNA=OFF -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_VALIDATION_SET=OFF -DENABLE_MODELS=OFF \
          -DCMAKE_TOOLCHAIN_FILE="$DLDT_HOME/cmake/arm64.toolchain.cmake" \
          -DCMAKE_STAGING_PREFIX=$STAGING_DIR \
          $DLDT_HOME && \
    make -j32 && \
    cd $DEV_HOME

#ArmCPU plugin
RUN git clone --recurse-submodules --single-branch --branch=master git@gitlab-icv.inn.intel.com:inference-engine/armnn-plugin.git $ARM_PLUGIN_HOME && \
    mkdir $ARM_PLUGIN_HOME/build && \
    cd $ARM_PLUGIN_HOME/build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DInferenceEngineDeveloperPackage_DIR=$DLDT_HOME/build \
          -DENABLE_TESTS=ON -DENABLE_BEH_TESTS=ON -DENABLE_FUNCTIONAL_TESTS=ON \
          -DARM_COMPUTE_TARGET_ARCH=arm64-v8a \
          -DCMAKE_TOOLCHAIN_FILE="$DLDT_HOME/cmake/arm64.toolchain.cmake" \
          -DCMAKE_STAGING_PREFIX=$STAGING_DIR \
          $ARM_PLUGIN_HOME && \
    make -j8

RUN cp -vr $DLDT_HOME/bin/aarch64/Release/* $STAGING_DIR/ && \
    cd $STAGING_DIR/ && \
    tar -czvf ../OV_ARM_package.tar.gz ./*
